{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "capstonedxcdf"
		},
		"AzureBlobStoragesilver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStoragesilver'"
		},
		"HttpServerLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HttpServerLinkedService'"
		},
		"httpToBlobCsv_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'httpToBlobCsv'"
		},
		"json_fromblob_tocosmosdb_linkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'json_fromblob_tocosmosdb_linkedservice'"
		},
		"restApi_to_AzureBlobStorage_json_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'restApi_to_AzureBlobStorage_json'"
		},
		"HttpServerLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gist.githubusercontent.com/kevin336/acbb2271e66c10a5b73aacf82ca82784/raw/e38afe62e088394d61ed30884dd50a6826eee0a8/employees.csv"
		},
		"HttpServerLinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "kmayilvahanan@yahoo.com"
		},
		"RestAPI_LinkedService_toBlob_Bronze_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://ergast.com/api/f1/2004/1/results.json"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Httpurl_pipeline_toBlob_Bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ingest data from http to blob Bronze Layer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": "employee.csv"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Info",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "httpToBlobCsv",
										"type": "LinkedServiceReference"
									},
									"path": "bronzelog"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EMPLOYEE_ID",
											"type": "String"
										},
										"sink": {
											"name": "EMPLOYEE_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FIRST_NAME",
											"type": "String"
										},
										"sink": {
											"name": "FIRST_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LAST_NAME",
											"type": "String"
										},
										"sink": {
											"name": "LAST_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PHONE_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "PHONE_NUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HIRE_DATE",
											"type": "String"
										},
										"sink": {
											"name": "HIRE_DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JOB_ID",
											"type": "String"
										},
										"sink": {
											"name": "JOB_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALARY",
											"type": "String"
										},
										"sink": {
											"name": "SALARY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COMMISSION_PCT",
											"type": "String"
										},
										"sink": {
											"name": "COMMISSION_PCT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MANAGER_ID",
											"type": "String"
										},
										"sink": {
											"name": "MANAGER_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DEPARTMENT_ID",
											"type": "String"
										},
										"sink": {
											"name": "DEPARTMENT_ID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "csvfromhttp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csvtoblob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvfromhttp')]",
				"[concat(variables('factoryId'), '/datasets/csvtoblob')]",
				"[concat(variables('factoryId'), '/linkedServices/httpToBlobCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestApi_pipeline_toBlob_Bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ingest data from Rest API to blob Bronze Layer",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Info",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "restApi_to_AzureBlobStorage_json",
										"type": "LinkedServiceReference"
									},
									"path": "bronzelog"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "RestIngestdatatoBlob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "respApi_toBlob_bronze",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestIngestdatatoBlob')]",
				"[concat(variables('factoryId'), '/datasets/respApi_toBlob_bronze')]",
				"[concat(variables('factoryId'), '/linkedServices/restApi_to_AzureBlobStorage_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "json_fromblob_tocosmosdb_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "capstoneDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/json_fromblob_tocosmosdb_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_silver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragesilver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "silverlayer"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragesilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestIngestdatatoBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestAPI_LinkedService_toBlob_Bronze",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestAPI_LinkedService_toBlob_Bronze')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvfromhttp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServerLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServerLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvtoblob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "httpToBlobCsv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "bronzelayer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/httpToBlobCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/respApi_toBlob_bronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "restApi_to_AzureBlobStorage_json",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "bronzelayer"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/restApi_to_AzureBlobStorage_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStoragesilver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStoragesilver_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServerLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServerLinkedService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('HttpServerLinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HttpServerLinkedService_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestAPI_LinkedService_toBlob_Bronze')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestAPI_LinkedService_toBlob_Bronze_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/httpToBlobCsv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('httpToBlobCsv_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_fromblob_tocosmosdb_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('json_fromblob_tocosmosdb_linkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/restApi_to_AzureBlobStorage_json')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('restApi_to_AzureBlobStorage_json_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "JsonRaceDataToSilver",
								"type": "DatasetReference"
							},
							"name": "sourcebronzesilverjson"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Json_silver",
								"type": "DatasetReference"
							},
							"name": "sinktocosmosdb"
						}
					],
					"transformations": [
						{
							"name": "RemovingNullData"
						},
						{
							"name": "addingNewcolumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          MRData as (xmlns as string, series as string, url as string, limit as string, offset as string, total as string, RaceTable as (season as string, round as string, Races as (season as string, round as string, url as string, raceName as string, Circuit as (circuitId as string, url as string, circuitName as string, Location as (lat as string, long as string, locality as string, country as string)), date as string, Results as (number as string, position as string, positionText as string, points as string, Driver as (driverId as string, code as string, url as string, givenName as string, familyName as string, dateOfBirth as string, nationality as string), Constructor as (constructorId as string, url as string, name as string, nationality as string), grid as string, laps as string, status as string, Time as (millis as string, time as string), FastestLap as (rank as string, lap as string, Time as (time as string), AverageSpeed as (units as string, speed as string)))[])[]))",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'arrayOfDocuments',",
						"     dateFormats: ['yyyy/MM/dd'],",
						"     timestampFormats: ['yyyy.MM.dd HH:mm:ss'],",
						"     preferredIntegralType: 'integer',",
						"     preferredFractionalType: 'double',",
						"     booleanFormat: ['1', '0']) ~> sourcebronzesilverjson",
						"sourcebronzesilverjson filter(!isNull(MRData.limit)) ~> RemovingNullData",
						"RemovingNullData derive(MRData = concat(MRData.xmlns,MRData.series)) ~> addingNewcolumn",
						"addingNewcolumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinktocosmosdb"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JsonRaceDataToSilver')]",
				"[concat(variables('factoryId'), '/datasets/Json_silver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonRaceDataToSilver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragesilver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "RaceData.json",
						"container": "bronzelayer"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"MRData": {
							"type": "object",
							"properties": {
								"xmlns": {
									"type": "string"
								},
								"series": {
									"type": "string"
								},
								"url": {
									"type": "string"
								},
								"limit": {
									"type": "string"
								},
								"offset": {
									"type": "string"
								},
								"total": {
									"type": "string"
								},
								"RaceTable": {
									"type": "object",
									"properties": {
										"season": {
											"type": "string"
										},
										"round": {
											"type": "string"
										},
										"Races": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"season": {
														"type": "string"
													},
													"round": {
														"type": "string"
													},
													"url": {
														"type": "string"
													},
													"raceName": {
														"type": "string"
													},
													"Circuit": {
														"type": "object",
														"properties": {
															"circuitId": {
																"type": "string"
															},
															"url": {
																"type": "string"
															},
															"circuitName": {
																"type": "string"
															},
															"Location": {
																"type": "object",
																"properties": {
																	"lat": {
																		"type": "string"
																	},
																	"long": {
																		"type": "string"
																	},
																	"locality": {
																		"type": "string"
																	},
																	"country": {
																		"type": "string"
																	}
																}
															}
														}
													},
													"date": {
														"type": "string"
													},
													"Results": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"number": {
																	"type": "string"
																},
																"position": {
																	"type": "string"
																},
																"positionText": {
																	"type": "string"
																},
																"points": {
																	"type": "string"
																},
																"Driver": {
																	"type": "object",
																	"properties": {
																		"driverId": {
																			"type": "string"
																		},
																		"code": {
																			"type": "string"
																		},
																		"url": {
																			"type": "string"
																		},
																		"givenName": {
																			"type": "string"
																		},
																		"familyName": {
																			"type": "string"
																		},
																		"dateOfBirth": {
																			"type": "string"
																		},
																		"nationality": {
																			"type": "string"
																		}
																	}
																},
																"Constructor": {
																	"type": "object",
																	"properties": {
																		"constructorId": {
																			"type": "string"
																		},
																		"url": {
																			"type": "string"
																		},
																		"name": {
																			"type": "string"
																		},
																		"nationality": {
																			"type": "string"
																		}
																	}
																},
																"grid": {
																	"type": "string"
																},
																"laps": {
																	"type": "string"
																},
																"status": {
																	"type": "string"
																},
																"Time": {
																	"type": "object",
																	"properties": {
																		"millis": {
																			"type": "string"
																		},
																		"time": {
																			"type": "string"
																		}
																	}
																},
																"FastestLap": {
																	"type": "object",
																	"properties": {
																		"rank": {
																			"type": "string"
																		},
																		"lap": {
																			"type": "string"
																		},
																		"Time": {
																			"type": "object",
																			"properties": {
																				"time": {
																					"type": "string"
																				}
																			}
																		},
																		"AverageSpeed": {
																			"type": "object",
																			"properties": {
																				"units": {
																					"type": "string"
																				},
																				"speed": {
																					"type": "string"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragesilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineRestApiToCosmos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RestApiToCosmos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcebronzesilverjson": {},
									"sinktocosmosdb": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}